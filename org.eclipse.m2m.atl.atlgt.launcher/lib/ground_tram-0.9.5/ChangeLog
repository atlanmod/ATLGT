2014-11-05  hidaka 

    * intermediate release (GRoundTram 0.9.5)
      - bug fix: Eliminate remaining epsilon
	(which also safely prevented possible coercion of identically
	 labeled edges). This fix comes with limited support for
	 editing of multiple edges sharing same endpoints.
      - bug fix: Branch behavior change detection caused by
	indirect interactions via variable bindings.
      - new: flag -bis of gdiff checks bisimilarity
      - Bug fix: In-place update of the first operand of @ was
	ignored when -ea (escapeApnd) flag was not specified
        (reported by Martin Billes).
      - new: Emulation of letrec variable syntax with a
	little abuse of the UnQL syntax, to create a cycle.
	Usage: letrec sfun f({$l : $g}) =  ... f($g) ...  in f({dummy})
      -	misc: enhancements to be documented.

2014-02-24 hidaka

    * intermediate release (GRoundTram 0.9.4)
      - new: fi2si includes fwd/bwd tracing capability.
      - new: bx_contract command for stage 3.
      -	misc: other enhancements to be documented.

2012-12-20 23:59 hidaka

    * intermediate release (GRoundTram 0.9.3a)
      - bug fix: Floating point number without number following decimal point in DOT caused parse error.
      - bug fix: Adapted pretty printer of UnQL+ to parsing rule for expr in template.
      - bug fix: Trace algorithm in Stage 2.
      - misc: Clean re-implementation of g2uncalT unnecessitates prior epsilon elimination.
      - misc: Consider the subclass of an abstract class declared in KM3.
      - new: node highlighting for fi2si command (trace tool).


2012-08-27 23:59 hidaka

    * release (GRoundTram 0.9.3)
      - new: a lightweight quick bidirectional interpreter bx_quick
	is added. Example can be found under examples/c2o_quick.
      - new: one-pass optimization of UnQL (experimental) is added
	in desugaring. Invoked via -u1p option in bx_quick.
	see [Yijun et al. ICSE'12] for detail.
      - new: editing on normalized graph using well-behaved bidirectional
	normalization implemented in function TestUnCALutil.edit_normg.
	experimental. [Hidaka et al. ASE'11 (short paper)] for detail.
      - new: enhanced UnCAL rewriting. see [Hidaka et al. LOPSTR'11]
	for detail.
      - new: -fi option in fwd_uncal flattens node ID in stage 2.
	use with -cl, -zn options to align with bwdI_enum_uncal.
      - new: lexicon '~' to represent empty path in regular path patterns
	is introduced.
      - new: various utility functions added in ExtSetMap module.
      - bug fix: small corrections in manual entries:
  	  option of dot command in tutorial
	  option of fwd_uncal command in the command reference
      - bug fix: UnCAL rewriting, and other modules.
      - bug fix: too strict consistency check relaxed for bwd_uncal.

2011-03-31 23:59  kinaba
    * release (GRoundTram 0.9.2)
      - new: entrance command "gtram" is added. All the features of
         GRoundTram can be invoked by using this single command.
      - new: chkuncal now supports user-supplied annotation for verifying
         nested recursion.
      - change: new syntax/semantics for replace/extend/delete queries in
         UnQL+ that makes the graph to be modified more clear.
      - change: let-expression can now be the top-level expression of an
         UnQL query without enclosing by "select".

2010-07-12 23:59  hidaka
	* release (GRoundTram 0.9.1).
      - new: cycle insertion support in command bwdI_enum_uncal.
      -	new: new option -t in commands fwd_uncal and bwd_uncal to print
	     elapsed CPU time.
      -	new: enhanced rewriting by -rw option in commands fwd_uncal,
	     unqlplus and uncalcmd.

2010-04-30 23:59  kinaba

	* release (GRoundTram 0.9.0).
      - new: two new commands, namely bwdIg_uncal and bwdI_enum_uncal, are
	     added for more powerful reflection of insertion on the view.
      - new: (to be written: other thing?)
      - new: bdotty reflects the name of the file editing to the title
	     of its window
      - new: chkuncal command for static typechecking
             which statically verifies an UnQL/UnCAL transformation is
             correct with respect to specified KM3 schemas
      - change: syntax of graph editing expressions 
		(replace-where, delete-where and extend-where) is changed. 

2009-11-12 15:23  kinaba

	* release (GRoundTram 0.1.1).
	  - bug fix: small .uncal files were not correctly generated.
	  - bug fix: fwd_uncal didn't work under Windows
	    because of binary/text confusion.
	  - new: added -cg option for unqlplus and uncalcmd,
	    which turns on graph contraction during transformation.
	  - new: -ht option for unqlplus and uncalcmd,
	    which turns on holistic transitive closure computation.

2009-11-11 05:42  hidaka

	* unCALDMutil.ml (1.17): Bug fix.
	  dumpG did not flush buffer of pretty printer.
	  Although  close_out calls Pervasives.flush internally,
	  the buffer for the pretty printer should be flushed separately
	  since Pervasives.flush do not flush the above buffer automatically.

2009-11-10 20:05  hidaka

	* dist/INSTALL (1.6): Spell checked.

2009-10-21 02:20  hidaka

	* prefOpt.ml (1.3), printUnCALDM.ml (1.10), testUnCALutil.ml
	  (1.17), unCALMAST.ml (1.10):   g2file/file2g (printUnCALDM.ml),
	  edinfo2file/file2editinfo (testUnCALutil.ml),
	  ma2file/file2ma (unCALMAST.ml)

	  binary channel is used for marshalling/unmarshalling

2009-10-21 01:05  hidaka

	* prefOpt.ml (1.2): Bug fix for empty graphs and leaves-only graphs.

2009-10-14 04:57  hidaka

	* evalUnCAL.ml (1.120), evalUnCAL.mli (1.58), uncalcmd.ml (1.19),
	  unqlplus.ml (1.36): evalUnCAL.{ml,mli}
	   New evaluation parameter: optTCRec
	     If true, make_dv in rec is optimized for both semantics.
	     It computes TC holistically, rather than node by node.
	     However, since default TC computation is efficient for one
	     node because it performs one depth-first search only
	     using index from node to outgoing edges, this option may
	     cause slowdown.
	     It performs better only when the input graph has a large
	     SCC (strongly-connected components) and query visits
	     most of the nodes.

	uncalcmd.ml
	unqlplus.ml
	   New option -ht
	     It activates holistic TC computation through optTCRec.

2009-10-05 21:41  hidaka

	* uncalcmd.ml (1.18), unqlplus.ml (1.35): uncalcmd.ml
	   Contraction option -cg added.
	unqlplus.ml
	   Bug fix: -cg  option was always turned on.

2009-10-05 09:52  hidaka

	* Makefile (1.74), contraction.ml (1.1), contraction.mli (1.1),
	  fputil.ml (1.11), unqlplus.ml (1.34): unqlplus.ml
	  new command line option: -cg
	  turns on graph contraction based on bisimulation using Paige-Tarjan
	  argorithm.

2009-10-01 00:00  kinaba

	* initial release (GRoundTram 0.1.0).
