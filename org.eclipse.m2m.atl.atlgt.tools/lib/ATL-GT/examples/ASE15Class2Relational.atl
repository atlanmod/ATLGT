module Class2Relational;
create OUT : Relational from IN : ClassDiagram;
rule Package2Schema{
  from
    p:ClassDiagram!Package 
       ( not p.ownedElement.isEmpty() )
  to
    out:Relational!Schema
        (
         __xmiID__ <- 'IN'.concat(p.__xmiID__.concat('.Package2Schema.t')),
         name<-p.name,
         ownedElement<-p.ownedElement)
}
rule Datatype2Type {
  from
    s : ClassDiagram!DataType
    (ClassDiagram!Class.allInstances()->select(c|c.name=s.name) -> isEmpty())
  to
    t : Relational!Type (
     __xmiID__ <- 'IN'.concat(s.__xmiID__.concat('.Datatype2Type.t')),
     name<-s.name)
}
rule Class2Table {
  from
    s : ClassDiagram!Class
  to
    t : Relational!Table 
        (__xmiID__ <- 'IN'.concat(s.__xmiID__.concat('.Class2Table.t')),
          name<-s.name, 
       col<-s.attr
       -- col<-s.attr.owner.attr.owner
       -- col<-s.attr.owner.attr
    )
}
rule Attribute2Column {
  from
    s : ClassDiagram!Attribute
     (not s.multiValued)
  to
    t : Relational!Column 
        (__xmiID__ <- 'IN'.concat(s.__xmiID__.concat('.Attribute2Column.t')),
         name<-s.owner.name+'_'+s.name, 
         references<-s.type,
        --    type<-s.type
       )
}
